name: DEPLOY

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  publish:
    name: Publish project
    runs-on: ubuntu-latest
#     if: github.event.pull_request.merged == true
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: '14'
          always-auth: true
      - name: Get the npm version
        id: release
        uses: martinbeentjes/npm-get-version-action@master
      - run: |
           echo "Version: ${{ steps.release.outputs.current-version }}"
      - name: Read Changelog
        id: read_changelog
        uses: mindsers/changelog-reader-action@v2
        with:
          validation_depth: 10
          version: ${{ steps.release.outputs.current-version }}
          path: ./CHANGELOG.md
      - name: Get the tag version
        id: tag_version
        uses: oprypin/find-latest-tag@v1
        with:
          repository: ozonophore/openapi-codegen
          releases-only: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Split Action
        id: split
        uses: rishabhgupta/split-by@v1
        with:
          # String to split
          string: ${{ steps.release.outputs.current-version }}
          # The delimiter to split the string
          split-by: '-'
      - name: Determine Checkout Depth
        uses: haya14busa/action-cond@v1
        id: tag
        with:
          cond: ${{ steps.split.outputs._1 == '' }}
          if_true: 'latest'  # string value
          if_false: ${{ steps.split.outputs._1 }}
      - run: |
           echo "Tag version: ${{ steps.tag_version.outputs.tag }}"
      - name: Install yarn
        if: github.ref == 'refs/heads/master'
        run: npm install --global yarn
      - name: Install packages
        if: github.ref == 'refs/heads/master'
        run: yarn install
      - name: Build library
        if: github.ref == 'refs/heads/master'
        run: yarn run release
      - name: Run unit tests
        if: github.ref == 'refs/heads/master'
        run: yarn run test:coverage
      - name: Run e2e tests
        if: github.ref == 'refs/heads/master'
        run: yarn run test:e2e
      - name: Submit to Codecov
        if: github.ref == 'refs/heads/master'
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV }}
      - name: Create Release
        id: create_release
        if: github.ref == 'refs/heads/master' && steps.release.outputs.current-version != steps.tag_version.outputs.tag
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.release.outputs.current-version }}
          release_name: Release ${{ steps.release.outputs.current-version }}
          body: ${{ steps.read_changelog.outputs.changes }}
          draft: ${{ steps.read_changelog.outputs.changes  == 'unreleased' }}
          prerelease: ${{ steps.read_changelog.outputs.changes  == 'prereleased' }}
      - name: Publish
        id: publish
        if: github.ref == 'refs/heads/master' && steps.release.outputs.current-version != steps.tag_version.outputs.tag
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_AUTH_TOKEN }}
          check-version: true
          access: public
          tag: ${{ steps.tag.outputs.value }}
      - if: steps.Publish.outputs.type != 'none'
        run: |
          echo "Version changed: ${{ steps.publish.outputs.old-version }} => ${{ steps.publish.outputs.version }}"

