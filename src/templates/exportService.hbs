{{>header}}

{{#if imports}}
{{#each imports}}
import type { {{{name}}}{{#if alias}} as {{{alias}}}{{/if}} } from '{{{@root.outputModels}}}{{{path}}}';
{{/each}}
{{/if}}
{{#if @root.useCancelableRequest}}
import type { CancelablePromise } from '{{{@root.outputCore}}}CancelablePromise';
{{/if}}
import { request as __request } from '{{{@root.outputCore}}}request';
import type { ApiRequestOptions } from '{{{@root.outputCore}}}ApiRequestOptions';
import { OpenAPI } from '{{{@root.outputCore}}}OpenAPI';

class ParameterRequiredError extends Error {
    constructor(public parameterName: string) {
        super(`Parameter "${parameterName}" is required`);
        this.name = 'ParameterRequiredError';
    }
}

{{#each operations}}
const {{{name}}} = ({{>parameters}}): ApiRequestOptions => ({
    {{>serviceOption}}
});

{{/each}}

export type T{{{originName}}}Options = {
{{#each operations}}
    {{{name}}}: ({{>parametersDefinition}}) => ApiRequestOptions;
{{/each}}
}

export const {{{originName}}}Options: T{{{originName}}}Options = {
{{#each operations}}
    {{{name}}}: {{{name}}},
{{/each}}
}

export class {{{name}}} {

    {{#each operations}}
    /**
    {{#if deprecated}}
     * @deprecated
    {{/if}}
    {{#if summary}}
     * {{{summary}}}
    {{/if}}
    {{#if description}}
     * {{{description}}}
    {{/if}}
    {{#unless @root.useOptions}}
    {{#if parameters}}
    {{#each parameters}}
     * @param {{{name}}} {{{description}}}
    {{/each}}
    {{/if}}
    {{/unless}}
    {{#each results}}
     * @returns {{{type}}} {{{description}}}
    {{/each}}
     * @throws ApiError
     */
    public static {{{name}}}({{>parameters}}): {{#if @root.useCancelableRequest}}CancelablePromise<{{>result default="void"}}>{{else}}Promise<{{>result default="void"}}>{{/if}} {
        {{#if parameters}}
        // Validate required parameters
        {{#each parameters}}
        {{#if isRequired}}
        if ({{{name}}} === null || {{{name}}} === undefined) {
            throw new Error('Parameter "{{{name}}}" is required');
        }
        {{/if}}
        {{/each}}
        {{/if}}
        
        return __request<{{>result default="void"}}>({{../originName}}Options.{{{name}}}({{>parameterValues~}}), OpenAPI);
    }
    {{/each}}
}