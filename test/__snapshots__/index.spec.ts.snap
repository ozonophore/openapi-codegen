// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`v2 should generate: ./test/generated/v2/core/ApiError.ts 1`] = `
"
import type { ApiResult } from './ApiResult';

export class ApiError extends Error {
    public readonly url: string;
    public readonly status: number;
    public readonly statusText: string;
    public readonly body: any;

    constructor(response: ApiResult, message: string) {
        super(message);

        this.url = response.url;
        this.status = response.status;
        this.statusText = response.statusText;
        this.body = response.body;
    }
}
"
`;

exports[`v2 should generate: ./test/generated/v2/core/ApiRequestOptions.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/core/ApiResult.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/core/HttpStatusCode.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/core/OpenAPI.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/core/request.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/index.ts 1`] = `
"
export { ApiError } from '././core/ApiError';
export { OpenAPI } from '././core/OpenAPI';
export type { TOpenAPIConfig } from '././core/OpenAPI';

export type { IDictionaryWithReference } from '././models/DictionaryWithReference';
export type { IModelWithArray } from '././models/ModelWithArray';
export type { IModelWithDictionary } from '././models/ModelWithDictionary';
export { IModelWithEnumInteger } from '././models/ModelWithEnumInteger';
export type { IModelWithString } from '././models/ModelWithString';
export type { TModelThatExtends } from '././models/ModelThatExtends';
export type { TModelThatExtendsExtends } from '././models/ModelThatExtendsExtends';

export { IDictionaryWithReferenceSchema } from '././schemas/DictionaryWithReferenceSchema';
export { IModelWithArraySchema } from '././schemas/ModelWithArraySchema';
export { IModelWithDictionarySchema } from '././schemas/ModelWithDictionarySchema';
export { IModelWithEnumIntegerSchema } from '././schemas/ModelWithEnumIntegerSchema';
export { IModelWithStringSchema } from '././schemas/ModelWithStringSchema';
export { TModelThatExtendsSchema } from '././schemas/ModelThatExtendsSchema';
export { TModelThatExtendsExtendsSchema } from '././schemas/ModelThatExtendsExtendsSchema';

export { Service } from '././services/Service';
export { SimpleService } from '././services/SimpleService';
export { ParametersService } from '././services/ParametersService';
export { DefaultsService } from '././services/DefaultsService';
export { DuplicateService } from '././services/DuplicateService';
export { NoContentService } from '././services/NoContentService';
export { ResponseService } from '././services/ResponseService';
export { CollectionFormatService } from '././services/CollectionFormatService';
export { TypesService } from '././services/TypesService';
export { ComplexService } from '././services/ComplexService';
export { HeaderService } from '././services/HeaderService';
"
`;

exports[`v2 should generate: ./test/generated/v2/models/DictionaryWithReference.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/models/ModelThatExtends.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/models/ModelThatExtendsExtends.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/models/ModelWithArray.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/models/ModelWithDictionary.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/models/ModelWithEnumInteger.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/models/ModelWithString.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/schemas/DictionaryWithReferenceSchema.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/schemas/ModelThatExtendsExtendsSchema.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/schemas/ModelThatExtendsSchema.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/schemas/ModelWithArraySchema.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/schemas/ModelWithDictionarySchema.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/schemas/ModelWithEnumIntegerSchema.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/schemas/ModelWithStringSchema.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/services/CollectionFormatService.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/services/ComplexService.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/services/DefaultsService.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/services/DuplicateService.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/services/HeaderService.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/services/NoContentService.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/services/ParametersService.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/services/ResponseService.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/services/Service.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/services/SimpleService.ts 1`] = `""`;

exports[`v2 should generate: ./test/generated/v2/services/TypesService.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/core/ApiError.ts 1`] = `
"
import type { ApiResult } from './ApiResult';

export class ApiError extends Error {
    public readonly url: string;
    public readonly status: number;
    public readonly statusText: string;
    public readonly body: any;

    constructor(response: ApiResult, message: string) {
        super(message);

        this.url = response.url;
        this.status = response.status;
        this.statusText = response.statusText;
        this.body = response.body;
    }
}
"
`;

exports[`v3 should generate from different files: ./test/generated/v3_1/core/ApiRequestOptions.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/core/ApiResult.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/core/HttpStatusCode.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/core/OpenAPI.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/core/request.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/index.ts 1`] = `
"
export { ApiError } from '././core/ApiError';
export { OpenAPI } from '././core/OpenAPI';
export type { TOpenAPIConfig } from '././core/OpenAPI';

export { EEnumWithNumbers } from '././models/schemas/EnumWithNumbers';
export { EEnumWithStrings } from '././models/schemas/EnumWithStrings';
export type { IModelWithArray } from '././models/schemas/ModelWithArray';
export type { IModelWithCircularReference } from '././models/schemas/ModelWithCircularReference';
export type { IModelWithDictionary } from '././models/schemas/ModelWithDictionary';
export { IModelWithEnum } from '././models/schemas/ModelWithEnum';
export type { IModelWithString } from '././models/schemas/ModelWithString';
export type { TArrayWithArray } from '././models/ArrayWithArray';
export type { TModelThatExtends } from '././models/schemas/ModelThatExtends';

export { EEnumWithNumbersSchema } from '././schemas/schemas/EnumWithNumbersSchema';
export { EEnumWithStringsSchema } from '././schemas/schemas/EnumWithStringsSchema';
export { IModelWithArraySchema } from '././schemas/schemas/ModelWithArraySchema';
export { IModelWithCircularReferenceSchema } from '././schemas/schemas/ModelWithCircularReferenceSchema';
export { IModelWithDictionarySchema } from '././schemas/schemas/ModelWithDictionarySchema';
export { IModelWithEnumSchema } from '././schemas/schemas/ModelWithEnumSchema';
export { IModelWithStringSchema } from '././schemas/schemas/ModelWithStringSchema';
export { TArrayWithArraySchema } from '././schemas/ArrayWithArraySchema';
export { TModelThatExtendsSchema } from '././schemas/schemas/ModelThatExtendsSchema';

export { SimpleService } from '././services/SimpleService';
export { ParametersService } from '././services/ParametersService';
export { RequestBodyService } from '././services/RequestBodyService';
export { DefaultsService } from '././services/DefaultsService';
export { DuplicateService } from '././services/DuplicateService';
export { NoContentService } from '././services/NoContentService';
export { ResponseService } from '././services/ResponseService';
export { CollectionFormatService } from '././services/CollectionFormatService';
export { TypesService } from '././services/TypesService';
export { UploadService } from '././services/UploadService';
export { ComplexService } from '././services/ComplexService';
export { MultipartService } from '././services/MultipartService';
export { HeaderService } from '././services/HeaderService';
export { CircularService } from '././services/CircularService';
export { EnumsService } from '././services/EnumsService';
"
`;

exports[`v3 should generate from different files: ./test/generated/v3_1/models/ArrayWithArray.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/models/schemas/EnumWithNumbers.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/models/schemas/EnumWithStrings.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/models/schemas/ModelThatExtends.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/models/schemas/ModelWithArray.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/models/schemas/ModelWithCircularReference.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/models/schemas/ModelWithDictionary.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/models/schemas/ModelWithEnum.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/models/schemas/ModelWithString.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/schemas/ArrayWithArraySchema.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/schemas/schemas/EnumWithNumbersSchema.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/schemas/schemas/EnumWithStringsSchema.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/schemas/schemas/ModelThatExtendsSchema.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/schemas/schemas/ModelWithArraySchema.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/schemas/schemas/ModelWithCircularReferenceSchema.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/schemas/schemas/ModelWithDictionarySchema.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/schemas/schemas/ModelWithEnumSchema.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/schemas/schemas/ModelWithStringSchema.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/services/CircularService.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/services/CollectionFormatService.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/services/ComplexService.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/services/DefaultsService.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/services/DuplicateService.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/services/EnumsService.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/services/HeaderService.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/services/MultipartService.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/services/NoContentService.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/services/ParametersService.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/services/RequestBodyService.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/services/ResponseService.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/services/SimpleService.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/services/TypesService.ts 1`] = `""`;

exports[`v3 should generate from different files: ./test/generated/v3_1/services/UploadService.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/core/ApiError.ts 1`] = `
"
import type { ApiResult } from './ApiResult';

export class ApiError extends Error {
    public readonly url: string;
    public readonly status: number;
    public readonly statusText: string;
    public readonly body: any;

    constructor(response: ApiResult, message: string) {
        super(message);

        this.url = response.url;
        this.status = response.status;
        this.statusText = response.statusText;
        this.body = response.body;
    }
}
"
`;

exports[`v3 should generate: ./test/generated/v3/core/ApiRequestOptions.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/core/ApiResult.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/core/HttpStatusCode.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/core/OpenAPI.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/core/request.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/index.ts 1`] = `
"
export { ApiError } from '././core/ApiError';
export { OpenAPI } from '././core/OpenAPI';
export type { TOpenAPIConfig } from '././core/OpenAPI';

export { EEnumWithNumbers } from '././models/EnumWithNumbers';
export { EEnumWithStrings } from '././models/EnumWithStrings';
export { EEnumWithStringsWithType } from '././models/EnumWithStringsWithType';
export type { IModelWithArray } from '././models/ModelWithArray';
export type { IModelWithDictionary } from '././models/ModelWithDictionary';
export { IModelWithEnum } from '././models/ModelWithEnum';
export type { IModelWithString } from '././models/ModelWithString';
export type { TArrayWithArray } from '././models/ArrayWithArray';
export type { TModelThatExtends } from '././models/ModelThatExtends';
export type { TModelThatExtendsExtends } from '././models/ModelThatExtendsExtends';

export { EEnumWithNumbersSchema } from '././schemas/EnumWithNumbersSchema';
export { EEnumWithStringsSchema } from '././schemas/EnumWithStringsSchema';
export { EEnumWithStringsWithTypeSchema } from '././schemas/EnumWithStringsWithTypeSchema';
export { IModelWithArraySchema } from '././schemas/ModelWithArraySchema';
export { IModelWithDictionarySchema } from '././schemas/ModelWithDictionarySchema';
export { IModelWithEnumSchema } from '././schemas/ModelWithEnumSchema';
export { IModelWithStringSchema } from '././schemas/ModelWithStringSchema';
export { TArrayWithArraySchema } from '././schemas/ArrayWithArraySchema';
export { TModelThatExtendsSchema } from '././schemas/ModelThatExtendsSchema';
export { TModelThatExtendsExtendsSchema } from '././schemas/ModelThatExtendsExtendsSchema';

export { SimpleService } from '././services/SimpleService';
export { ParametersService } from '././services/ParametersService';
export { RequestBodyService } from '././services/RequestBodyService';
export { DefaultsService } from '././services/DefaultsService';
export { DuplicateService } from '././services/DuplicateService';
export { NoContentService } from '././services/NoContentService';
export { ResponseService } from '././services/ResponseService';
export { CollectionFormatService } from '././services/CollectionFormatService';
export { TypesService } from '././services/TypesService';
export { UploadService } from '././services/UploadService';
export { ComplexService } from '././services/ComplexService';
export { MultipartService } from '././services/MultipartService';
export { HeaderService } from '././services/HeaderService';
export { EnumsService } from '././services/EnumsService';
"
`;

exports[`v3 should generate: ./test/generated/v3/models/ArrayWithArray.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/models/EnumWithNumbers.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/models/EnumWithStrings.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/models/EnumWithStringsWithType.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/models/ModelThatExtends.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/models/ModelThatExtendsExtends.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/models/ModelWithArray.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/models/ModelWithDictionary.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/models/ModelWithEnum.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/models/ModelWithString.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/schemas/ArrayWithArraySchema.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/schemas/EnumWithNumbersSchema.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/schemas/EnumWithStringsSchema.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/schemas/EnumWithStringsWithTypeSchema.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/schemas/ModelThatExtendsExtendsSchema.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/schemas/ModelThatExtendsSchema.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/schemas/ModelWithArraySchema.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/schemas/ModelWithDictionarySchema.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/schemas/ModelWithEnumSchema.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/schemas/ModelWithStringSchema.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/services/CollectionFormatService.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/services/ComplexService.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/services/DefaultsService.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/services/DuplicateService.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/services/EnumsService.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/services/HeaderService.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/services/MultipartService.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/services/NoContentService.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/services/ParametersService.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/services/RequestBodyService.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/services/ResponseService.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/services/SimpleService.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/services/TypesService.ts 1`] = `""`;

exports[`v3 should generate: ./test/generated/v3/services/UploadService.ts 1`] = `""`;
