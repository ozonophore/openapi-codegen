/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { IModelWithString } from './../models/./ModelWithString';
import { request as __request } from './../core/request';
import type { ApiRequestOptions } from './../core/ApiRequestOptions';
import { OpenAPI } from './../core/OpenAPI';

const callWithDefaultParameters = (
    parameterString: string | null = 'Hello World!',
    parameterNumber: number | null = 123,
    parameterBoolean: boolean | null = true,
    parameterEnum: 'Success' | 'Warning' | 'Error' = 'Success',
    parameterModel: IModelWithString | null = {
        prop: 'Hello World!',
    },
): ApiRequestOptions => ({
    method: 'GET',
    path: `/api/v{api-version}/defaults`,
    query: {
        parameterString: parameterString,
        parameterNumber: parameterNumber,
        parameterBoolean: parameterBoolean,
        parameterEnum: parameterEnum,
        parameterModel: parameterModel,
    },
});

const callWithDefaultOptionalParameters = (
    parameterString: string = 'Hello World!',
    parameterNumber: number = 123,
    parameterBoolean: boolean = true,
    parameterEnum: 'Success' | 'Warning' | 'Error' = 'Success',
    parameterModel: IModelWithString = {
        prop: 'Hello World!',
    },
): ApiRequestOptions => ({
    method: 'POST',
    path: `/api/v{api-version}/defaults`,
    query: {
        parameterString: parameterString,
        parameterNumber: parameterNumber,
        parameterBoolean: parameterBoolean,
        parameterEnum: parameterEnum,
        parameterModel: parameterModel,
    },
});

const callToTestOrderOfParams = (
    parameterStringWithNoDefault: string,

    parameterOptionalStringWithDefault: string = 'Hello World!',
    parameterOptionalStringWithEmptyDefault: string = '',
    parameterStringWithDefault: string = 'Hello World!',
    parameterStringWithEmptyDefault: string = '',
    parameterOptionalStringWithNoDefault?: string,
): ApiRequestOptions => ({
    method: 'PUT',
    path: `/api/v{api-version}/defaults`,
    query: {
        parameterStringWithNoDefault: parameterStringWithNoDefault,
        parameterOptionalStringWithDefault: parameterOptionalStringWithDefault,
        parameterOptionalStringWithEmptyDefault: parameterOptionalStringWithEmptyDefault,
        parameterStringWithDefault: parameterStringWithDefault,
        parameterStringWithEmptyDefault: parameterStringWithEmptyDefault,
        parameterOptionalStringWithNoDefault: parameterOptionalStringWithNoDefault,
    },
});

export type TDefaultsOptions = {
    callWithDefaultParameters: (
        parameterString: string | null,

        parameterNumber: number | null,

        parameterBoolean: boolean | null,

        parameterEnum: 'Success' | 'Warning' | 'Error',
        parameterModel: IModelWithString | null,
    ) => ApiRequestOptions;
    callWithDefaultOptionalParameters: (
        parameterString: string,

        parameterNumber: number,

        parameterBoolean: boolean,

        parameterEnum: 'Success' | 'Warning' | 'Error',
        parameterModel: IModelWithString,
    ) => ApiRequestOptions;
    callToTestOrderOfParams: (
        parameterStringWithNoDefault: string,

        parameterOptionalStringWithDefault: string,

        parameterOptionalStringWithEmptyDefault: string,

        parameterStringWithDefault: string,

        parameterStringWithEmptyDefault: string,

        parameterOptionalStringWithNoDefault?: string,
    ) => ApiRequestOptions;
};

export const DefaultsOptions: TDefaultsOptions = {
    callWithDefaultParameters: callWithDefaultParameters,
    callWithDefaultOptionalParameters: callWithDefaultOptionalParameters,
    callToTestOrderOfParams: callToTestOrderOfParams,
};

export class DefaultsService {
    /**
     * @param parameterString This is a simple string with default value
     * @param parameterNumber This is a simple number with default value
     * @param parameterBoolean This is a simple boolean with default value
     * @param parameterEnum This is a simple enum with default value
     * @param parameterModel This is a simple model with default value
     * @throws ApiError
     */
    public static callWithDefaultParameters(
        parameterString: string | null = 'Hello World!',
        parameterNumber: number | null = 123,
        parameterBoolean: boolean | null = true,
        parameterEnum: 'Success' | 'Warning' | 'Error' = 'Success',
        parameterModel: IModelWithString | null = {
            prop: 'Hello World!',
        },
    ): Promise<void> {
        return __request<void>(
            DefaultsOptions.callWithDefaultParameters(
                parameterString,
                parameterNumber,
                parameterBoolean,
                parameterEnum,
                parameterModel,
            ),
            OpenAPI,
        );
    }
    /**
     * @param parameterString This is a simple string that is optional with default value
     * @param parameterNumber This is a simple number that is optional with default value
     * @param parameterBoolean This is a simple boolean that is optional with default value
     * @param parameterEnum This is a simple enum that is optional with default value
     * @param parameterModel This is a simple model that is optional with default value
     * @throws ApiError
     */
    public static callWithDefaultOptionalParameters(
        parameterString: string = 'Hello World!',
        parameterNumber: number = 123,
        parameterBoolean: boolean = true,
        parameterEnum: 'Success' | 'Warning' | 'Error' = 'Success',
        parameterModel: IModelWithString = {
            prop: 'Hello World!',
        },
    ): Promise<void> {
        return __request<void>(
            DefaultsOptions.callWithDefaultOptionalParameters(
                parameterString,
                parameterNumber,
                parameterBoolean,
                parameterEnum,
                parameterModel,
            ),
            OpenAPI,
        );
    }
    /**
     * @param parameterStringWithNoDefault This is a string with no default
     * @param parameterOptionalStringWithDefault This is a optional string with default
     * @param parameterOptionalStringWithEmptyDefault This is a optional string with empty default
     * @param parameterStringWithDefault This is a string with default
     * @param parameterStringWithEmptyDefault This is a string with empty default
     * @param parameterOptionalStringWithNoDefault This is a optional string with no default
     * @throws ApiError
     */
    public static callToTestOrderOfParams(
        parameterStringWithNoDefault: string,

        parameterOptionalStringWithDefault: string = 'Hello World!',
        parameterOptionalStringWithEmptyDefault: string = '',
        parameterStringWithDefault: string = 'Hello World!',
        parameterStringWithEmptyDefault: string = '',
        parameterOptionalStringWithNoDefault?: string,
    ): Promise<void> {
        return __request<void>(
            DefaultsOptions.callToTestOrderOfParams(
                parameterStringWithNoDefault,
                parameterOptionalStringWithDefault,
                parameterOptionalStringWithEmptyDefault,
                parameterStringWithDefault,
                parameterStringWithEmptyDefault,
                parameterOptionalStringWithNoDefault,
            ),
            OpenAPI,
        );
    }
}
