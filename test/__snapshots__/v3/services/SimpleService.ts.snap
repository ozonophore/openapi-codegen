/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import { request as __request } from './../core/request';
import type { ApiRequestOptions } from './../core/ApiRequestOptions';
import { OpenAPI } from './../core/OpenAPI';

const getCallWithoutParametersAndResponse = (): ApiRequestOptions => ({
    method: 'GET',
    path: `/api/v{api-version}/simple`,
});

const putCallWithoutParametersAndResponse = (): ApiRequestOptions => ({
    method: 'PUT',
    path: `/api/v{api-version}/simple`,
});

const postCallWithoutParametersAndResponse = (): ApiRequestOptions => ({
    method: 'POST',
    path: `/api/v{api-version}/simple`,
});

const deleteCallWithoutParametersAndResponse = (): ApiRequestOptions => ({
    method: 'DELETE',
    path: `/api/v{api-version}/simple`,
});

const optionsCallWithoutParametersAndResponse = (): ApiRequestOptions => ({
    method: 'OPTIONS',
    path: `/api/v{api-version}/simple`,
});

const headCallWithoutParametersAndResponse = (): ApiRequestOptions => ({
    method: 'HEAD',
    path: `/api/v{api-version}/simple`,
});

const patchCallWithoutParametersAndResponse = (): ApiRequestOptions => ({
    method: 'PATCH',
    path: `/api/v{api-version}/simple`,
});

export type TSimpleOptions = {
    getCallWithoutParametersAndResponse: () => ApiRequestOptions;
    putCallWithoutParametersAndResponse: () => ApiRequestOptions;
    postCallWithoutParametersAndResponse: () => ApiRequestOptions;
    deleteCallWithoutParametersAndResponse: () => ApiRequestOptions;
    optionsCallWithoutParametersAndResponse: () => ApiRequestOptions;
    headCallWithoutParametersAndResponse: () => ApiRequestOptions;
    patchCallWithoutParametersAndResponse: () => ApiRequestOptions;
};

export const SimpleOptions: TSimpleOptions = {
    getCallWithoutParametersAndResponse: getCallWithoutParametersAndResponse,
    putCallWithoutParametersAndResponse: putCallWithoutParametersAndResponse,
    postCallWithoutParametersAndResponse: postCallWithoutParametersAndResponse,
    deleteCallWithoutParametersAndResponse: deleteCallWithoutParametersAndResponse,
    optionsCallWithoutParametersAndResponse: optionsCallWithoutParametersAndResponse,
    headCallWithoutParametersAndResponse: headCallWithoutParametersAndResponse,
    patchCallWithoutParametersAndResponse: patchCallWithoutParametersAndResponse,
};

export class SimpleService {
    /**
     * @throws ApiError
     */
    public static getCallWithoutParametersAndResponse(): Promise<void> {
        return __request<void>(SimpleOptions.getCallWithoutParametersAndResponse(), OpenAPI);
    }
    /**
     * @throws ApiError
     */
    public static putCallWithoutParametersAndResponse(): Promise<void> {
        return __request<void>(SimpleOptions.putCallWithoutParametersAndResponse(), OpenAPI);
    }
    /**
     * @throws ApiError
     */
    public static postCallWithoutParametersAndResponse(): Promise<void> {
        return __request<void>(SimpleOptions.postCallWithoutParametersAndResponse(), OpenAPI);
    }
    /**
     * @throws ApiError
     */
    public static deleteCallWithoutParametersAndResponse(): Promise<void> {
        return __request<void>(SimpleOptions.deleteCallWithoutParametersAndResponse(), OpenAPI);
    }
    /**
     * @throws ApiError
     */
    public static optionsCallWithoutParametersAndResponse(): Promise<void> {
        return __request<void>(SimpleOptions.optionsCallWithoutParametersAndResponse(), OpenAPI);
    }
    /**
     * @throws ApiError
     */
    public static headCallWithoutParametersAndResponse(): Promise<void> {
        return __request<void>(SimpleOptions.headCallWithoutParametersAndResponse(), OpenAPI);
    }
    /**
     * @throws ApiError
     */
    public static patchCallWithoutParametersAndResponse(): Promise<void> {
        return __request<void>(SimpleOptions.patchCallWithoutParametersAndResponse(), OpenAPI);
    }
}
